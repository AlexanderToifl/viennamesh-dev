/**

\page manual-page-introduction    Introduction

\tableofcontents

ViennaMesh is an open source meshing framework which aims to support a wide range of different mesh related algorithms.

\section Motivation

Several libraries providing mesh related algorithms, like <a href="http://www.tetgen.org">Tetgen</a> or <a href="https://sourceforge.net/projects/netgen-mesher/">Netgen</a>, are available but they usually do not provide interfaces to each other. The main goal of ViennaMesh is to provide such interfaces enable the use of different mesh related algorithms.

\section Overview

The main entity of ViennaMesh is the algorithm. An algorithm processes a set of input parameters and optionally generates a set of output parameters. Typical input and output parameters are meshes. For example the mesh_reader algorithm requires a string input parameter to read a mesh which is then provided as an output parameter. Usually, output parameters of one algorithm are used as input parameters of another. ViennaMesh supports linking input parameters to output parameters.

TODO: Image pipeline

ViennaMesh supports a wide range of \ref manual-page-algorithms "Algorithms" which can be used and linked together to generate or modify meshes.

\section ViennaMesh-Infrastructure ViennaMesh Infrastructure

Parameters are encapsulated using wrappers within ViennaMesh. Internally, the ViennaMesh infrastructure offers a automatic conversion mechanism to ensure that each algorithm get its inputs in the requested representation. For example, the Tetgen mesh generation algorithm requires an input mesh in Tetgen mesh type representation while the output mesh of a mesh_reader algorithm is available in ViennaGrid representation. ViennaMesh automatically takes care of conversions if they are needed.

TODO: Image conversion

\section How-To-Use-ViennaMesh How To Use ViennaMesh?

Currently, there are three ways how to use ViennaMesh:
  - \ref manual-page-tools "Command line tools"
  - \ref manual-page-pyviennamesh "Python Layer"
  - \ref manual-page-api "API"

*/
