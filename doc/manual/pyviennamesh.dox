/**

\page manual-page-pyviennamesh    PyViennaMesh

ViennaMesh also provides an interface to Python enabling convenient meshing with scripts. To enable the Python layer see \ref manual-page-installation.


\section section-pyviennamesh-how-to How To Use PyViennaMesh

At first, the pyviennamesh module has to be loaded in Python:

\code{.py}
>>> import pyviennamesh
\endcode

An algorithm can be created using the create_by_id method of the algorithm_factory and the algorithm id (see \ref section-list-of-algorithms for algorithm ids)

\code{.py}
>>> my_algo = pyviennamesh.algorithm_factory().create_by_id( <ALGORITHM_ID> )
\endcode

Input parameters can be set by using the set_input method of the algorithm:

\code{.py}
>>> my_algo.set_input( <INPUT_PARAMETER_NAME> , <INPUT_PARAMETER_VALUE> )
\endcode

Input parameters can also be linked to output parameters of another algorithm:

\code{.py}
>>> my_algo.set_input( <INPUT_PARAMETER_NAME> , <OTHER_ALGORITHM> , <OUTPUT_PARAMETER_NAME_OF_OTHER_ALGORITHM> )
\endcode

A default source algorithm can be set by using the set_default_algorithm method:

\code{.py}
>>> my_algo.set_default_algorithm( <OTHER_ALGORITHM> )
\endcode

The algorithm is executed using the run method:

\code{.py}
>>> my_algo.run()
\endcode

\section section-pyviennamesh-simple-example A Simple Example

A simple short example is presented here:

\code{.py}
>>> import pyviennamesh
>>> reader = pyviennamesh.algorithm_factory().create_by_id("mesh_reader")
>>> mesher = pyviennamesh.algorithm_factory().create_by_id("tetgen_make_mesh")
>>> writer = pyviennamesh.algorithm_factory().create_by_id("mesh_writer")
>>> reader.set_input("filename","../../examples/data/cubeception.poly")
>>> mesher.set_default_source(reader)
>>> mesher.set_input("cell_size",1.0)
>>> writer.set_default_source(mesher)
>>> writer.set_input("filename","test.vtu")
>>> reader.run()
>>> mesher.run()
>>> writer.run()
\endcode

At first (line 1) the PyViennaMesh module is loaded. Then, three algorithms, a mesh reader, a Tetgen mesh generator, and a mesh writer (lines 2-4). The input parameters are set and linked in lines 5-9). At last, the algorithms are executed (lines 10-12).

*/
