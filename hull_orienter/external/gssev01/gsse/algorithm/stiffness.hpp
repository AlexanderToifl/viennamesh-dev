/* ************* :: Generic Scientific Simulation Environment :: *************
 **  http://www.gsse.at                                                     **

     Copyright (c) 2003-2008 Rene Heinzl                 rene@gsse.at
     Copyright (c) 2004-2008 Philipp Schwaha          philipp@gsse.at
     Copyright (c) 2005-2006 Michael Spevak

     Use, modification and distribution is subject to the Boost Software
     License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
 **  http://www.boost.org/LICENSE_1_0.txt)                                  **
 *************************************************************************** */

#ifndef GSSE_FEM_STIFFNESS_2006
#define GSSE_FEM_STIFFNESS_2006

#include "gsse/topology.hpp"

namespace gsse
{

template <typename ArrayType, typename Archetype, int dim>
struct stiffness {};


template <typename ArrayType>
struct stiffness<ArrayType, simplex_topology_tag, 3>
{
   ArrayType Srl1;
   ArrayType Srl2;
   ArrayType Srl3;
   ArrayType Srl4;
   ArrayType Srl5;
   ArrayType Srl6;

   stiffness() : Srl1(4, 5), Srl2(4, 5), Srl3(4, 5), Srl4(4, 5), Srl5(4, 5), Srl6(4, 5)
      {
         for (int i = 0; i < 4; ++i)
         {
            for (int j = 0; j < 5; ++j)
            {
               Srl1(i, j) = 0.0;
               Srl2(i, j) = 0.0;
               Srl3(i, j) = 0.0;
               Srl4(i, j) = 0.0;
               Srl5(i, j) = 0.0;
               Srl6(i, j) = 0.0;
            }
         }
         
         Srl1(0, 0) =   1.0/6.0;
         Srl1(1, 0) =  -1.0/6.0;
         Srl1(0, 1) =  -1.0/6.0;
         Srl1(1, 1) =   1.0/6.0;
         
         Srl2(0, 0) =   1.0/6.0;
         Srl2(2, 0) =  -1.0/6.0;
         Srl2(0, 2) =  -1.0/6.0;
         Srl2(2, 2) =   1.0/6.0;
         
         Srl3(0, 0) =   1.0/6.0;
         Srl3(3, 0) =  -1.0/6.0;
         Srl3(0, 3) =  -1.0/6.0;
         Srl3(3, 3) =   1.0/6.0;
    
         Srl4(0, 0) =   2.0/6.0;
         Srl4(1, 0) =  -1.0/6.0;
         Srl4(0, 1) =  -1.0/6.0;
         Srl4(2, 0) =  -1.0/6.0;
         Srl4(0, 2) =  -1.0/6.0;
         Srl4(2, 1) =   1.0/6.0;
         Srl4(1, 2) =   1.0/6.0;
         
         Srl5(0, 0) =   2.0/6.0;
         Srl5(2, 0) =  -1.0/6.0;
         Srl5(0, 2) =  -1.0/6.0;
         Srl5(3, 0) =  -1.0/6.0;
         Srl5(0, 3) =  -1.0/6.0;
         Srl5(3, 2) =   1.0/6.0;
         Srl5(2, 3) =   1.0/6.0;    
    
         Srl6(0, 0) =   2.0/6.0;
         Srl6(1, 0) =  -1.0/6.0;
         Srl6(0, 1) =  -1.0/6.0;
         Srl6(3, 0) =  -1.0/6.0;
         Srl6(0, 3) =  -1.0/6.0;
         Srl6(3, 1) =   1.0/6.0;
         Srl6(1, 3) =   1.0/6.0;
         
         // *******************************************************************
         //
         // This is the right hand side. For reasons of homogenity it is
         // handled as normal matrix. 
      }

   ArrayType operator()(ArrayType & g)
      {
         double ga = g(0, 0);
         double gb = g(1, 1);
         double gc = g(2, 2);
         double gd = g(1, 0);
         double ge = g(2, 1);
         double gf = g(2, 0);
         ArrayType result(4, 5);
         result = Srl1 * ga + Srl2 * gb + Srl3 * gc + Srl4 * gd + Srl5 * ge + Srl6 * gf;
         return result;
      }
};


template <typename ArrayType>
struct stiffness<ArrayType, simplex_topology_tag, 2>
{
   ArrayType Srl1;
   ArrayType Srl2;
   ArrayType Srl3;

   stiffness() : Srl1(3, 4), Srl2(3, 4), Srl3(3, 4)
      {
         
         for (int i = 0; i < 3; ++i)
         {
            for (int j = 0; j < 4; ++j)
            {
               Srl1(i, j) = 0.0;
               Srl2(i, j) = 0.0;
               Srl3(i, j) = 0.0;
            }
         }
         
         Srl1(0, 0) =  1.0/2.0;
         Srl1(1, 0) = -1.0/2.0;
         Srl1(0, 1) = -1.0/2.0;
         Srl1(1, 1) =  1.0/2.0;
                  
         Srl2(0, 0) =  1.0/2.0;
         Srl2(2, 0) = -1.0/2.0;
         Srl2(0, 2) = -1.0/2.0;
         Srl2(2, 2) =  1.0/2.0;

         Srl3(0, 0) =  2.0/2.0;
         Srl3(1, 0) = -1.0/2.0;
         Srl3(2, 0) = -1.0/2.0;
         Srl3(0, 1) = -1.0/2.0;
         Srl3(0, 2) = -1.0/2.0;
         Srl3(2, 1) =  1.0/2.0;
         Srl3(1, 2) =  1.0/2.0;
      }

   ArrayType operator()(ArrayType & g)
      {
         double ga = g(0, 0);
         double gb = g(1, 1);
         double gc = g(1, 0);

         ArrayType result(3, 4);
         result = Srl1 * ga + Srl2 * gb + Srl3 * gc;
         
         //std::cout << result << std::endl;

         return result;
      }
};

template <typename ArrayType>
struct stiffness<ArrayType, cuboid_topology_tag, 2>
{
   ArrayType Srl1;
   ArrayType Srl2;
   ArrayType Srl3;

   stiffness() : Srl1(4, 5), Srl2(4, 5), Srl3(4, 5)
      {
         
         for (int i = 0; i < 4; ++i)
         {
            for (int j = 0; j < 5; ++j)
            {
               Srl1(i, j) = 0.0;
               Srl2(i, j) = 0.0;
               Srl3(i, j) = 0.0;
            }
         }
         
         Srl1(0, 0) =  2.0/6.0;
         Srl1(1, 0) = -2.0/6.0;
         Srl1(0, 1) = -2.0/6.0;
         Srl1(1, 1) =  2.0/6.0;
         Srl1(2, 0) =  1.0/6.0;
         Srl1(3, 0) = -1.0/6.0;
         Srl1(2, 1) = -1.0/6.0;
         Srl1(3, 1) =  1.0/6.0;
         Srl1(0, 2) =  1.0/6.0;
         Srl1(1, 2) = -1.0/6.0;
         Srl1(0, 3) = -1.0/6.0;
         Srl1(1, 3) =  1.0/6.0;
         Srl1(2, 2) =  2.0/6.0;
         Srl1(3, 2) = -2.0/6.0;
         Srl1(2, 3) = -2.0/6.0;
         Srl1(3, 3) =  2.0/6.0;

         Srl2(0, 0) =  2.0/6.0;
         Srl2(1, 0) =  1.0/6.0;
         Srl2(0, 1) =  1.0/6.0;
         Srl2(1, 1) =  2.0/6.0;
         Srl2(2, 0) = -1.0/6.0;
         Srl2(3, 0) = -2.0/6.0;
         Srl2(2, 1) = -2.0/6.0;
         Srl2(3, 1) = -1.0/6.0;
         Srl2(0, 2) = -1.0/6.0;
         Srl2(1, 2) = -2.0/6.0;
         Srl2(0, 3) = -2.0/6.0;
         Srl2(1, 3) = -1.0/6.0;
         Srl2(2, 2) =  2.0/6.0;
         Srl2(3, 2) =  1.0/6.0;
         Srl2(2, 3) =  1.0/6.0;
         Srl2(3, 3) =  2.0/6.0;


         Srl3(0, 0) =  1.0/2.0;
         Srl3(1, 0) =  0.0/2.0;
         Srl3(0, 1) =  0.0/2.0;
         Srl3(1, 1) = -1.0/2.0;
         Srl3(2, 0) = -1.0/2.0;
         Srl3(3, 0) =  0.0/2.0;
         Srl3(2, 1) =  0.0/2.0;
         Srl3(3, 1) =  1.0/2.0;
         Srl3(0, 2) = -1.0/2.0;
         Srl3(1, 2) =  0.0/2.0;
         Srl3(0, 3) =  0.0/2.0;
         Srl3(1, 3) =  1.0/2.0;
         Srl3(2, 2) =  1.0/2.0;
         Srl3(3, 2) =  0.0/2.0;
         Srl3(2, 3) =  0.0/2.0;
         Srl3(3, 3) = -1.0/2.0;
      }

   ArrayType operator()(ArrayType & g)
      {
         double ga = g(0, 0);
         double gb = g(1, 1);
         double gc = g(1, 0);

         ArrayType result(4, 5);

         result = Srl1 * ga + Srl2 * gb + Srl3 * gc;
         
         //std::cout << result << std::endl;

         return result;
      }
};



template <typename ArrayType>
struct stiffness<ArrayType, cuboid_topology_tag, 3>
{
   ArrayType Srl1;
   ArrayType Srl2;
   ArrayType Srl3;
   ArrayType Srl4;
   ArrayType Srl5;
   ArrayType Srl6;

   stiffness() : Srl1(8, 9), Srl2(8, 9), Srl3(8, 9), Srl4(8, 9), Srl5(8, 9), Srl6(8, 9)
      {
         for (int i = 0; i < 8; ++i)
         {
            for (int j = 0; j < 9; ++j)
            {
               Srl1(i, j) = 0.0;
               Srl2(i, j) = 0.0;
               Srl3(i, j) = 0.0;
               Srl4(i, j) = 0.0;
               Srl5(i, j) = 0.0;
               Srl6(i, j) = 0.0;
            }
         }
         
         // Srl1 = 1/36 * 
         // 4  2  2  1 -4 -2 -2 -1
         // 2  4  1  2 -2 -4 -1 -2
         // 2  1  4  2 -2 -1 -4 -2
         // 1  2  2  4 -1 -2 -2 -4
         // -4 -2 -2 -1 4  2  2  1 
         // -2 -4 -1 -2 2  4  1  2 
         // -2 -1 -4 -2 2  1  4  2 
         // -1 -2 -2 -4 1  2  2  4 

         Srl1(0, 0) =  4.0/36.0;
         Srl1(0, 1) =  2.0/36.0;
         Srl1(0, 2) =  2.0/36.0;
         Srl1(0, 3) =  1.0/36.0;
         Srl1(0, 4) = -4.0/36.0;
         Srl1(0, 5) = -2.0/36.0;
         Srl1(0, 6) = -2.0/36.0;
         Srl1(0, 7) = -1.0/36.0;

         Srl1(1, 0) =  2.0/36.0;
         Srl1(1, 1) =  4.0/36.0;
         Srl1(1, 2) =  1.0/36.0;
         Srl1(1, 3) =  2.0/36.0;
         Srl1(1, 4) = -2.0/36.0;
         Srl1(1, 5) = -4.0/36.0;
         Srl1(1, 6) = -1.0/36.0;
         Srl1(1, 7) = -2.0/36.0;

         Srl1(2, 0) =  2.0/36.0;
         Srl1(2, 1) =  1.0/36.0;
         Srl1(2, 2) =  4.0/36.0;
         Srl1(2, 3) =  2.0/36.0;
         Srl1(2, 4) = -2.0/36.0;
         Srl1(2, 5) = -1.0/36.0;
         Srl1(2, 6) = -4.0/36.0;
         Srl1(2, 7) = -2.0/36.0;

         Srl1(3, 0) =  1.0/36.0;
         Srl1(3, 1) =  2.0/36.0;
         Srl1(3, 2) =  2.0/36.0;
         Srl1(3, 3) =  4.0/36.0;
         Srl1(3, 4) = -1.0/36.0;
         Srl1(3, 5) = -2.0/36.0;
         Srl1(3, 6) = -2.0/36.0;
         Srl1(3, 7) = -4.0/36.0;

         Srl1(4, 0) = -4.0/36.0;
         Srl1(4, 1) = -2.0/36.0;
         Srl1(4, 2) = -2.0/36.0;
         Srl1(4, 3) = -1.0/36.0;
         Srl1(4, 4) =  4.0/36.0;
         Srl1(4, 5) =  2.0/36.0;
         Srl1(4, 6) =  2.0/36.0;
         Srl1(4, 7) =  1.0/36.0;

         Srl1(5, 0) = -2.0/36.0;
         Srl1(5, 1) = -4.0/36.0;
         Srl1(5, 2) = -1.0/36.0;
         Srl1(5, 3) = -2.0/36.0;
         Srl1(5, 4) =  2.0/36.0;
         Srl1(5, 5) =  4.0/36.0;
         Srl1(5, 6) =  1.0/36.0;
         Srl1(5, 7) =  2.0/36.0;

         Srl1(6, 0) = -2.0/36.0;
         Srl1(6, 1) = -1.0/36.0;
         Srl1(6, 2) = -4.0/36.0;
         Srl1(6, 3) = -2.0/36.0;
         Srl1(6, 4) =  2.0/36.0;
         Srl1(6, 5) =  1.0/36.0;
         Srl1(6, 6) =  4.0/36.0;
         Srl1(6, 7) =  2.0/36.0;

         Srl1(7, 0) = -1.0/36.0;
         Srl1(7, 1) = -2.0/36.0;
         Srl1(7, 2) = -2.0/36.0;
         Srl1(7, 3) = -4.0/36.0;
         Srl1(7, 4) =  1.0/36.0;
         Srl1(7, 5) =  2.0/36.0;
         Srl1(7, 6) =  2.0/36.0;
         Srl1(7, 7) =  4.0/36.0;
         
         // Srl2 = 1/36 * 
         // 4  2 -4 -2  2  1 -2 -1 
         // 2  4 -2 -4  1  2 -1 -2
         //-4 -2  4  2 -2 -1  2  1
         //-2 -4  2  4 -1 -2  1  2
         // 2  1 -2 -1  4  2 -4 -2
         // 1  2 -1 -2  2  4 -2 -4
         //-2 -1  2  1 -4 -2  4  2
         //-1 -2  1  2 -2 -4  2  4

         Srl2(0, 0) =  4.0/36.0;
         Srl2(0, 1) =  2.0/36.0;
         Srl2(0, 2) = -4.0/36.0;
         Srl2(0, 3) = -2.0/36.0;
         Srl2(0, 4) =  2.0/36.0;
         Srl2(0, 5) =  1.0/36.0;
         Srl2(0, 6) = -2.0/36.0;
         Srl2(0, 7) = -1.0/36.0;

         Srl2(1, 0) =  2.0/36.0;
         Srl2(1, 1) =  4.0/36.0;
         Srl2(1, 2) = -2.0/36.0;
         Srl2(1, 3) = -4.0/36.0;
         Srl2(1, 4) =  1.0/36.0;
         Srl2(1, 5) =  2.0/36.0;
         Srl2(1, 6) = -1.0/36.0;
         Srl2(1, 7) = -2.0/36.0;

         Srl2(2, 0) = -4.0/36.0;
         Srl2(2, 1) = -2.0/36.0;
         Srl2(2, 2) =  4.0/36.0;
         Srl2(2, 3) =  2.0/36.0;
         Srl2(2, 4) = -2.0/36.0;
         Srl2(2, 5) = -1.0/36.0;
         Srl2(2, 6) =  2.0/36.0;
         Srl2(2, 7) =  1.0/36.0;

         Srl2(3, 0) = -2.0/36.0;
         Srl2(3, 1) = -4.0/36.0;
         Srl2(3, 2) =  2.0/36.0;
         Srl2(3, 3) =  4.0/36.0;
         Srl2(3, 4) = -1.0/36.0;
         Srl2(3, 5) = -2.0/36.0;
         Srl2(3, 6) =  1.0/36.0;
         Srl2(3, 7) =  2.0/36.0;
         
         Srl2(4, 0) =  2.0/36.0;
         Srl2(4, 1) =  1.0/36.0;
         Srl2(4, 2) = -2.0/36.0;
         Srl2(4, 3) = -1.0/36.0;
         Srl2(4, 4) =  4.0/36.0;
         Srl2(4, 5) =  2.0/36.0;
         Srl2(4, 6) = -4.0/36.0;
         Srl2(4, 7) = -2.0/36.0;

         Srl2(5, 0) =  1.0/36.0;
         Srl2(5, 1) =  2.0/36.0;
         Srl2(5, 2) = -1.0/36.0;
         Srl2(5, 3) = -2.0/36.0;
         Srl2(5, 4) =  2.0/36.0;
         Srl2(5, 5) =  4.0/36.0;
         Srl2(5, 6) = -2.0/36.0;
         Srl2(5, 7) = -4.0/36.0;

         Srl2(6, 0) = -2.0/36.0;
         Srl2(6, 1) = -1.0/36.0;
         Srl2(6, 2) =  2.0/36.0;
         Srl2(6, 3) =  1.0/36.0;
         Srl2(6, 4) = -4.0/36.0;
         Srl2(6, 5) = -2.0/36.0;
         Srl2(6, 6) =  4.0/36.0;
         Srl2(6, 7) =  2.0/36.0;

         Srl2(7, 0) = -1.0/36.0;
         Srl2(7, 1) = -2.0/36.0;
         Srl2(7, 2) =  1.0/36.0;
         Srl2(7, 3) =  2.0/36.0;
         Srl2(7, 4) = -2.0/36.0;
         Srl2(7, 5) = -4.0/36.0;
         Srl2(7, 6) =  2.0/36.0;
         Srl2(7, 7) =  4.0/36.0;


         // Srl3 = 1/36 * 
         // 4 -4  2 -2  2 -2  1 -1
         //-4  4 -2  2 -2  2 -1  1
         // 2 -2  4 -4  1 -1  2 -2
         //-2  2 -4  4 -1  1 -2  2
         // 2 -2  1 -1  4 -4  2 -2
         //-2  2 -1  1 -4  4 -2  2
         // 1 -1  2 -2  2 -2  4 -4
         //-1  1 -2  2 -2  2 -4  4

         Srl3(0, 0) =  4.0/36.0;
         Srl3(0, 1) = -4.0/36.0;
         Srl3(0, 2) =  2.0/36.0;
         Srl3(0, 3) = -2.0/36.0;
         Srl3(0, 4) =  2.0/36.0;
         Srl3(0, 5) = -2.0/36.0;
         Srl3(0, 6) =  1.0/36.0;
         Srl3(0, 7) = -1.0/36.0;

         Srl3(1, 0) = -4.0/36.0;
         Srl3(1, 1) =  4.0/36.0;
         Srl3(1, 2) = -2.0/36.0;
         Srl3(1, 3) =  2.0/36.0;
         Srl3(1, 4) = -2.0/36.0;
         Srl3(1, 5) =  2.0/36.0;
         Srl3(1, 6) = -1.0/36.0;
         Srl3(1, 7) =  1.0/36.0;

         Srl3(2, 0) =  2.0/36.0;
         Srl3(2, 1) = -2.0/36.0;
         Srl3(2, 2) =  4.0/36.0;
         Srl3(2, 3) = -4.0/36.0;
         Srl3(2, 4) =  1.0/36.0;
         Srl3(2, 5) = -1.0/36.0;
         Srl3(2, 6) =  2.0/36.0;
         Srl3(2, 7) = -2.0/36.0;

         Srl3(3, 0) = -2.0/36.0;
         Srl3(3, 1) =  2.0/36.0;
         Srl3(3, 2) = -4.0/36.0;
         Srl3(3, 3) =  4.0/36.0;
         Srl3(3, 4) = -1.0/36.0;
         Srl3(3, 5) =  1.0/36.0;
         Srl3(3, 6) = -2.0/36.0;
         Srl3(3, 7) =  2.0/36.0;

         Srl3(4, 0) =  2.0/36.0;
         Srl3(4, 1) = -2.0/36.0;
         Srl3(4, 2) =  1.0/36.0;
         Srl3(4, 3) = -1.0/36.0;
         Srl3(4, 4) =  4.0/36.0;
         Srl3(4, 5) = -4.0/36.0;
         Srl3(4, 6) =  2.0/36.0;
         Srl3(4, 7) = -2.0/36.0;

         Srl3(5, 0) = -2.0/36.0;
         Srl3(5, 1) =  2.0/36.0;
         Srl3(5, 2) = -1.0/36.0;
         Srl3(5, 3) =  1.0/36.0;
         Srl3(5, 4) = -4.0/36.0;
         Srl3(5, 5) =  4.0/36.0;
         Srl3(5, 6) = -2.0/36.0;
         Srl3(5, 7) =  2.0/36.0;

         Srl3(6, 0) =  1.0/36.0;
         Srl3(6, 1) = -1.0/36.0;
         Srl3(6, 2) =  2.0/36.0;
         Srl3(6, 3) = -2.0/36.0;
         Srl3(6, 4) =  2.0/36.0;
         Srl3(6, 5) = -2.0/36.0;
         Srl3(6, 6) =  4.0/36.0;
         Srl3(6, 7) = -4.0/36.0;

         Srl3(7, 0) = -1.0/36.0;
         Srl3(7, 1) =  1.0/36.0;
         Srl3(7, 2) = -2.0/36.0;
         Srl3(7, 3) =  2.0/36.0;
         Srl3(7, 4) = -2.0/36.0;
         Srl3(7, 5) =  2.0/36.0;
         Srl3(7, 6) = -4.0/36.0;
         Srl3(7, 7) =  4.0/36.0;

         ////////////////////////////////////

         Srl4(0, 0) =  2.0/36.0;
         Srl4(0, 1) =  0.0/36.0;
         Srl4(0, 2) =  0.0/36.0;
         Srl4(0, 3) = -2.0/36.0;
         Srl4(0, 4) =  1.0/36.0;
         Srl4(0, 5) =  0.0/36.0;
         Srl4(0, 6) =  0.0/36.0;
         Srl4(0, 7) = -1.0/36.0;

         Srl4(1, 0) =  0.0/36.0;
         Srl4(1, 1) = -2.0/36.0;
         Srl4(1, 2) =  2.0/36.0;
         Srl4(1, 3) =  0.0/36.0;
         Srl4(1, 4) =  0.0/36.0;
         Srl4(1, 5) = -1.0/36.0;
         Srl4(1, 6) =  1.0/36.0;
         Srl4(1, 7) =  0.0/36.0;

         Srl4(2, 0) =  0.0/36.0;
         Srl4(2, 1) =  2.0/36.0;
         Srl4(2, 2) = -2.0/36.0;
         Srl4(2, 3) =  0.0/36.0;
         Srl4(2, 4) =  0.0/36.0;
         Srl4(2, 5) =  1.0/36.0;
         Srl4(2, 6) = -1.0/36.0;
         Srl4(2, 7) =  0.0/36.0;

         Srl4(3, 0) = -2.0/36.0;
         Srl4(3, 1) =  0.0/36.0;
         Srl4(3, 2) =  0.0/36.0;
         Srl4(3, 3) =  2.0/36.0;
         Srl4(3, 4) = -1.0/36.0;
         Srl4(3, 5) =  0.0/36.0;
         Srl4(3, 6) =  0.0/36.0;
         Srl4(3, 7) =  1.0/36.0;

         Srl4(4, 0) =  1.0/36.0;
         Srl4(4, 1) =  0.0/36.0;
         Srl4(4, 2) =  0.0/36.0;
         Srl4(4, 3) = -1.0/36.0;
         Srl4(4, 4) =  2.0/36.0;
         Srl4(4, 5) =  0.0/36.0;
         Srl4(4, 6) =  0.0/36.0;
         Srl4(4, 7) = -2.0/36.0;

         Srl4(5, 0) =  0.0/36.0;
         Srl4(5, 1) = -1.0/36.0;
         Srl4(5, 2) =  1.0/36.0;
         Srl4(5, 3) =  0.0/36.0;
         Srl4(5, 4) =  0.0/36.0;
         Srl4(5, 5) = -2.0/36.0;
         Srl4(5, 6) =  2.0/36.0;
         Srl4(5, 7) =  0.0/36.0;

         Srl4(6, 0) =  0.0/36.0;
         Srl4(6, 1) =  1.0/36.0;
         Srl4(6, 2) = -1.0/36.0;
         Srl4(6, 3) =  0.0/36.0;
         Srl4(6, 4) =  0.0/36.0;
         Srl4(6, 5) =  2.0/36.0;
         Srl4(6, 6) = -2.0/36.0;
         Srl4(6, 7) =  0.0/36.0;

         Srl4(7, 0) = -1.0/36.0;
         Srl4(7, 1) =  0.0/36.0;
         Srl4(7, 2) =  0.0/36.0;
         Srl4(7, 3) =  1.0/36.0;
         Srl4(7, 4) = -2.0/36.0;
         Srl4(7, 5) =  0.0/36.0;
         Srl4(7, 6) =  0.0/36.0;
         Srl4(7, 7) =  2.0/36.0;

         //////////////////////////////////

         Srl5(0, 0) =  2.0/36.0;
         Srl5(0, 1) =  1.0/36.0;
         Srl5(0, 2) =  0.0/36.0;
         Srl5(0, 3) =  0.0/36.0;
         Srl5(0, 4) =  0.0/36.0;
         Srl5(0, 5) =  0.0/36.0;
         Srl5(0, 6) = -2.0/36.0;
         Srl5(0, 7) = -1.0/36.0;

         Srl5(1, 0) =  1.0/36.0;
         Srl5(1, 1) =  2.0/36.0;
         Srl5(1, 2) =  0.0/36.0;
         Srl5(1, 3) =  0.0/36.0;
         Srl5(1, 4) =  0.0/36.0;
         Srl5(1, 5) =  0.0/36.0;
         Srl5(1, 6) = -1.0/36.0;
         Srl5(1, 7) = -2.0/36.0;

         Srl5(2, 0) =  0.0/36.0;
         Srl5(2, 1) =  0.0/36.0;
         Srl5(2, 2) = -2.0/36.0;
         Srl5(2, 3) = -1.0/36.0;
         Srl5(2, 4) =  2.0/36.0;
         Srl5(2, 5) =  1.0/36.0;
         Srl5(2, 6) =  0.0/36.0;
         Srl5(2, 7) =  0.0/36.0;

         Srl5(3, 0) =  0.0/36.0;
         Srl5(3, 1) =  0.0/36.0;
         Srl5(3, 2) = -1.0/36.0;
         Srl5(3, 3) = -2.0/36.0;
         Srl5(3, 4) =  1.0/36.0;
         Srl5(3, 5) =  2.0/36.0;
         Srl5(3, 6) =  0.0/36.0;
         Srl5(3, 7) =  0.0/36.0;

         Srl5(4, 0) =  0.0/36.0;
         Srl5(4, 1) =  0.0/36.0;
         Srl5(4, 2) =  2.0/36.0;
         Srl5(4, 3) =  1.0/36.0;
         Srl5(4, 4) = -2.0/36.0;
         Srl5(4, 5) = -1.0/36.0;
         Srl5(4, 6) =  0.0/36.0;
         Srl5(4, 7) =  0.0/36.0;

         Srl5(5, 0) =  0.0/36.0;
         Srl5(5, 1) =  0.0/36.0;
         Srl5(5, 2) =  1.0/36.0;
         Srl5(5, 3) =  2.0/36.0;
         Srl5(5, 4) = -1.0/36.0;
         Srl5(5, 5) = -2.0/36.0;
         Srl5(5, 6) =  0.0/36.0;
         Srl5(5, 7) =  0.0/36.0;

         Srl5(6, 0) = -2.0/36.0;
         Srl5(6, 1) = -1.0/36.0;
         Srl5(6, 2) =  0.0/36.0;
         Srl5(6, 3) =  0.0/36.0;
         Srl5(6, 4) =  0.0/36.0;
         Srl5(6, 5) =  0.0/36.0;
         Srl5(6, 6) =  2.0/36.0;
         Srl5(6, 7) =  1.0/36.0;

         Srl5(7, 0) = -1.0/36.0;
         Srl5(7, 1) = -2.0/36.0;
         Srl5(7, 2) =  0.0/36.0;
         Srl5(7, 3) =  0.0/36.0;
         Srl5(7, 4) =  0.0/36.0;
         Srl5(7, 5) =  0.0/36.0;
         Srl5(7, 6) =  1.0/36.0;
         Srl5(7, 7) =  2.0/36.0;
         
         /////////////////////////////////////////

         Srl6(0, 0) =  2.0/36.0;
         Srl6(0, 1) =  0.0/36.0;
         Srl6(0, 2) =  1.0/36.0;
         Srl6(0, 3) =  0.0/36.0;
         Srl6(0, 4) =  0.0/36.0;
         Srl6(0, 5) = -2.0/36.0;
         Srl6(0, 6) =  0.0/36.0;
         Srl6(0, 7) = -1.0/36.0;

         Srl6(1, 0) =  0.0/36.0;
         Srl6(1, 1) = -2.0/36.0;
         Srl6(1, 2) =  0.0/36.0;
         Srl6(1, 3) = -1.0/36.0;
         Srl6(1, 4) =  2.0/36.0;
         Srl6(1, 5) =  0.0/36.0;
         Srl6(1, 6) =  1.0/36.0;
         Srl6(1, 7) =  0.0/36.0;

         Srl6(2, 0) =  1.0/36.0;
         Srl6(2, 1) =  0.0/36.0;
         Srl6(2, 2) =  2.0/36.0;
         Srl6(2, 3) =  0.0/36.0;
         Srl6(2, 4) =  0.0/36.0;
         Srl6(2, 5) = -1.0/36.0;
         Srl6(2, 6) =  0.0/36.0;
         Srl6(2, 7) = -2.0/36.0;

         Srl6(3, 0) =  0.0/36.0;
         Srl6(3, 1) = -1.0/36.0;
         Srl6(3, 2) =  0.0/36.0;
         Srl6(3, 3) = -2.0/36.0;
         Srl6(3, 4) =  1.0/36.0;
         Srl6(3, 5) =  0.0/36.0;
         Srl6(3, 6) =  2.0/36.0;
         Srl6(3, 7) =  0.0/36.0;

         Srl6(4, 0) =  0.0/36.0;
         Srl6(4, 1) =  2.0/36.0;
         Srl6(4, 2) =  0.0/36.0;
         Srl6(4, 3) =  1.0/36.0;
         Srl6(4, 4) = -2.0/36.0;
         Srl6(4, 5) =  0.0/36.0;
         Srl6(4, 6) = -1.0/36.0;
         Srl6(4, 7) =  0.0/36.0;

         Srl6(5, 0) = -2.0/36.0;
         Srl6(5, 1) =  0.0/36.0;
         Srl6(5, 2) = -1.0/36.0;
         Srl6(5, 3) =  0.0/36.0;
         Srl6(5, 4) =  0.0/36.0;
         Srl6(5, 5) =  2.0/36.0;
         Srl6(5, 6) =  0.0/36.0;
         Srl6(5, 7) =  1.0/36.0;

         Srl6(6, 0) =  0.0/36.0;
         Srl6(6, 1) =  1.0/36.0;
         Srl6(6, 2) =  0.0/36.0;
         Srl6(6, 3) =  2.0/36.0;
         Srl6(6, 4) = -1.0/36.0;
         Srl6(6, 5) =  0.0/36.0;
         Srl6(6, 6) = -2.0/36.0;
         Srl6(6, 7) =  0.0/36.0;

         Srl6(7, 0) = -1.0/36.0;
         Srl6(7, 1) =  0.0/36.0;
         Srl6(7, 2) = -2.0/36.0;
         Srl6(7, 3) =  0.0/36.0;
         Srl6(7, 4) =  0.0/36.0;
         Srl6(7, 5) =  1.0/36.0;
         Srl6(7, 6) =  0.0/36.0;
         Srl6(7, 7) =  2.0/36.0;
      }

   ArrayType operator()(ArrayType & g)
      {
         double ga = g(0, 0);
         double gb = g(1, 1);
         double gc = g(2, 2);
         double gd = g(1, 0);
         double ge = g(2, 1);
         double gf = g(2, 0);

         ArrayType result(8, 9);

         if (!is_symmetric<8>(Srl1)) 
         {
            std::cout << "SRL1" << std::endl;
            std::cout << Srl1 << std::endl;
         }

         if (!is_symmetric<8>(Srl2)) 
         {
            std::cout << "SRL2" << std::endl;
            std::cout << Srl2 << std::endl;
         }

         if (!is_symmetric<8>(Srl3)) 
         {
            std::cout << "SRL3" << std::endl;
            std::cout << Srl3 << std::endl;
         }
         
         result = Srl1 * ga + Srl2 * gb + Srl3 * gc + Srl4 * gd + Srl5 * ge + Srl6 * gf;
         
         //std::cout << result << std::endl;

         return result;
      }
};


template <typename ArrayType>
struct stiffness<ArrayType, cuboid_topology_tag, 1>
{
   ArrayType Srl1;

   stiffness() : Srl1(2, 3)
      {
         Srl1(0, 0) =  1.0;
         Srl1(0, 1) = -1.0;
         Srl1(1, 0) = -1.0;
         Srl1(1, 1) =  1.0;
         Srl1(0, 2) =  0.0;
         Srl1(1, 2) =  0.0;
      }

   ArrayType operator()(ArrayType & g)
      {
         double ga = g(0, 0);
         ArrayType result(2, 3);
         result = Srl1 * ga;
         
         //std::cout << result << std::endl;

         return result;
      }
};



}

#endif
